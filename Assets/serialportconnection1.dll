using UnityEngine;
using System.Collections;
using System.IO.Ports;
using System.Text;


public class serialportconnection : MonoBehaviour
{

public GameObject[] pins; //V2D

string receivedData = "";
 
SerialPort stream = new SerialPort(); // Seri baglanti nesnesini olustur

bool flag1;
    void Start()
    {
      flag1 = false;
        //pins[].SetActive(true);
        //prefslersil();
        PlayerPrefs.SetInt("Oyunbasladi",0);
        PlayerPrefs.SetInt("Oyunbitti",0);
        PlayerPrefs.SetString("seribaglanti","0");

        stream.Close();
        // Seri baglanti yapilandirmalarini ayarla
        stream.BaudRate = 9600;
        //PlayerPrefs.SetString("COMPort", "com1");
        PlayerPrefs.Save();
        stream.PortName = PlayerPrefs.GetString("COMPort");
          //      stream.PortName = PlayerPrefs.GetString("COMPort", "COM5");
     //   PlayerPrefs.Save;
        stream.Parity = Parity.None;
        stream.DataBits = 8;
        stream.StopBits = StopBits.One;
        stream.Handshake = Handshake.None;
        stream.ReadTimeout = 1000;
        stream.WriteTimeout = 100;
        if(stream.IsOpen){ //V2D yer değiştirildi 13.05.2024 prefs ile fonksiyon
        PlayerPrefs.SetString("seribaglanti","1");
        }else{
         Baglantibaslat(); 
        }
    }

        public void Baglantibaslat(){
        try
        {
            // SERI BAGLANTIYI AC
            stream.Close();
            stream.PortName = PlayerPrefs.GetString("COMPort"); //!! port butona bastığında da yenilenmeli
            Debug.Log("Bağlanılan COM Port: " + stream.PortName);
            Debug.Log("bağlantı bu portta baslatiliyor" + PlayerPrefs.GetString("COMPort"));
            stream.Open();
            PlayerPrefs.SetString("seribaglanti","1");
        }
        catch (System.Exception e)
        {
            Debug.LogError("Seri baglanti acilamadi: " + e.Message);
           // Baglantibaslat();
           PlayerPrefs.SetString("seribaglanti","0"); 
        }
        }


/*!!   void SeriOku(){
        try
        {
            // Seri porttan gelen veriyi oku
            receivedData = System.Convert.ToChar(stream.ReadByte()).ToString();
            Debug.Log("Alinan veri: " + receivedData);
            PlayerPrefs.SetString("receivedDataGLB", receivedData);
        }
        catch (System.Exception e)
        {
            Debug.LogError("Seri port okuma islem hatasi: " + e.Message);
            receivedData = "EMP";
        }
        }*/

void SeriOku()
{
    try
    {
        StringBuilder receivedWord = new StringBuilder();

        // Sonsuz bir döngü ile seri porttan gelen karakterleri birleştir
        while (stream.BytesToRead > 0)
        {
          //Debug.Log("Data Geldi");
            char receivedChar = System.Convert.ToChar(stream.ReadByte());

            // Eğer gelen karakter newline ('\n') ise döngüyü sonlandır
            if (receivedChar == '\n')
            {
        receivedData = receivedWord.ToString();
        PlayerPrefs.SetString("receivedDataGLB",receivedData);
      //  Debug.Log("Alınan veri GLB:"+PlayerPrefs.GetString("receivedDataGLB")+ ":");
                break;
            }else{
            // Gelen karakteri bir kelime olarak birleştir
            receivedWord.Append(receivedChar);
        //    Debug.Log(":"+receivedChar + ":");
            }
        }

        // Elde edilen kelimeyi yazdır ve PlayerPrefs'e kaydet

    }
    catch (System.Exception e)
    {
      //!!  Debug.LogError("Seri port okuma işlem hatası: " + e.Message);
        receivedData = "EMP" + e;
    }
}



    void Update()
    {
        if(!stream.IsOpen && flag1 == false ){Debug.Log("port açık değil!"); flag1 = true; Baglantibaslat();} //V2D

      if (PlayerPrefs.GetString("receivedDataGLB").Trim() == "ma"){
        stream.Write("yazdirmadeneme2");
        PlayerPrefs.DeleteKey("receivedDataGLB");
      }
      
       if (PlayerPrefs.GetString("receivedDataGLB").Trim() == "ab"){
        Debug.Log("abyi aldim");
        PlayerPrefs.DeleteKey("receivedDataGLB");
      }

        // START KOMUTU
        if (stream.IsOpen) {
            SeriOku();
       //     Debug.Log(PlayerPrefs.GetString("receivedDataGLB"));

        if (PlayerPrefs.GetString("receivedDataGLB").Trim().Length == 8)
        {
            PlayerPrefs.SetString("GelenData",PlayerPrefs.GetString("receivedDataGLB").Trim());
            PlayerPrefs.DeleteKey("receivedDataGLB");
            Debug.Log("sifrealindi");
            PlayerPrefs.SetInt("verialindi",1);
            stream.Write("O");
            
        }

        if(PlayerPrefs.GetString("receivedDataGLB").Trim() == "P")
        {
          PlayerPrefs.DeleteKey("receivedDataGLB");
           PlayerPrefs.SetInt("player2",1);
           Debug.Log("player2 set edildi");
           stream.Write("O");
        }
     }
      if(PlayerPrefs.GetInt("labutanim") == 1)
      {
        StartCoroutine(labutAnimation());
      }


    }

    public void Activepins(){ //V2D
    Debug.Log("active ediliyor");
      for (int i = 0; i < 10; i++){
        pins[i].SetActive(true);
      }
    }

    void OnApplicationQuit()
    {
        // Oyun nesnesi yok edildiğinde seri bağlantıyı kapat
        if (stream != null && stream.IsOpen)
        {
            stream.Close();
            Debug.Log("Seri baglanti kapatildi.");
            prefslersil();
        }
    }

    void prefslersil(){
        string hafiza = PlayerPrefs.GetString("girisdegeri");
        string comhafiza = PlayerPrefs.GetString("COMPort");
        string ghafiza = PlayerPrefs.GetString("GelenData");
        PlayerPrefs.DeleteAll();
        PlayerPrefs.SetString("girisdegeri",hafiza);
        PlayerPrefs.SetString("COMPort",comhafiza);
        PlayerPrefs.SetString("GelenData",ghafiza);
        comhafiza = "";
        hafiza = "";
        ghafiza="";
    }

    IEnumerator labutAnimation() //V2D
    {
      PlayerPrefs.SetInt("labutanim",0);
        PlayerPrefs.SetInt("Animison",1);
        Debug.Log("Animasyon Labut basladi");
        yield return new WaitForSeconds(2f);
       // serialportv3.Activepins();      
       Activepins();  
        PlayerPrefs.SetInt("Animison",0);
    }

}